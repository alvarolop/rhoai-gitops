---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: open-webui
  namespace: {{ .Release.Namespace }}
  labels:
    app: open-webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      containers:
        - name: open-webui
          env:
            # Documentation here
            # https://docs.openwebui.com/getting-started/advanced-topics/env-configuration/
            {{- if .Values.llmInferenceService.apiKey }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-api-key
                  key: OPENAI_API_KEY
            {{- end }}
            - name: ENABLE_OLLAMA_API
              value: "false"
            - name: ENABLE_OPENAI_API
              value: "true"
            - name: GLOBAL_LOG_LEVEL
              value: DEBUG
            - name: OPENAI_API_BASE_URL
              value: {{ .Values.llmInferenceService.url }}
            - name: ENABLE_AUTOCOMPLETE_GENERATION
              value: "False"
            # https://github.com/open-webui/open-webui/issues/1398
            - name: REQUESTS_CA_BUNDLE
              value: /etc/pki/ca-trust/source/anchors/service-ca.crt
            - name: SSL_CERT_FILE
              value: /etc/pki/ca-trust/source/anchors/service-ca.crt
            - name: WEBUI_AUTH
              value: "False"
            {{- if .Values.rag.enabled }}
            # VectorDB
            - name: VECTOR_DB
              value: "milvus"
            - name: MILVUS_URI
              value: "http://root:Milvus@vectordb-milvus.milvus.svc.cluster.local:19530"
            # - name: RAG_TOP_K
            #   value: "milvus"
            # - name: RAG_RELEVANCE_THRESHOLD
            #   value: "milvus"
            # - name: RAG_RELEVANCE_THRESHOLD
            #   value: "milvus"
            # Embeddings configuration
            # Option 1: OpenAI
            - name: RAG_EMBEDDING_ENGINE
              value: "openai"
            - name: RAG_OPENAI_API_BASE_URL
              value: "https://nomic-embed-text-v1.nomic-embed-text-v1.svc.cluster.local/v1"
            - name: RAG_EMBEDDING_MODEL
              value: "nomic-embed-text-v1"
            # Option 2: Ollama
            # - name: RAG_EMBEDDING_ENGINE
            #   value: "ollama"
            # - name: RAG_OLLAMA_BASE_URL
            #   value: "https://nomic-embed-text-v1.nomic-embed-text-v1.svc.cluster.local"
            # - name: RAG_EMBEDDING_MODEL
            #   value: "nomic-embed-text-v1"
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: open-webui
              mountPath: /app/backend/data
            - name: user-ca-bundle-volume
              mountPath: /etc/pki/ca-trust/source/anchors/
              readOnly: true
          image: 'ghcr.io/open-webui/open-webui:main'
          securityContext:
            runAsUser: 0
      serviceAccountName: open-webui
      volumes:
        - name: open-webui
          persistentVolumeClaim:
            claimName: open-webui
        # https://docs.redhat.com/en/documentation/red_hat_openshift_ai_self-managed/2-latest/html/installing_and_uninstalling_openshift_ai_self-managed/working-with-certificates_certs#how_the_configmap_is_managed
        - name: user-ca-bundle-volume
          configMap:
            name: openshift-service-ca.crt
